steps:
  # Check Initial files
  - id: 'Stage'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - 'ls -l'
  # Testing Stage
  - id: 'Code Test Stage'
    name: 'maven:3.8.3-openjdk-17'
    args: ['mvn', 'test']
  # Code Coverage Stage
  - id: 'Code Coverage Stage'
    name: 'maven:3.8.4'
    args: ['mvn', 'clean', 'jacoco:prepare-agent', 'jacoco:report']
  # Build Stage
  - id: 'Build Stage'
    name: 'maven:3.8.3-openjdk-17'
    args: ['mvn', 'clean', 'package', '-DskipTests']
  # Check files
  - id: 'Check Stage'
    name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - 'ls -l target'
  # Docker Build Stage
  - id: 'Delivey Stage (Build)'
    name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'europe-west1-docker.pkg.dev/devsu-project/devsu-test/springboot:latest', '.']
  # Docker Push Stage
  - id: 'Delivey Stage (Push)'
    name: 'gcr.io/cloud-builders/docker'
    args:
        - push
        - 'europe-west1-docker.pkg.dev/devsu-project/devsu-test/springboot:latest'
  - id: 'Deploy Stage (GKE)'
    name: gcr.io/cloud-builders/gke-deploy
    args:
      - run
      - '--filename=manifest-cloudbuild.yaml'
      - '--location=europe-west1-b'
      - '--cluster=devsu-cluster-test'

  # # Deploy Stage (GKE)
  # - id: 'Deploy Stage (GKE)'
  #   name: 'gcr.io/cloud-builders/gcloud'
  #   entrypoint: 'bash'
  #   args:
  #     - '-c'
  #     - |
  #         PROJECT=$$(gcloud config get-value core/project)          
  #         gke-gcloud-auth-plugin --version
  #         export USE_GKE_GCLOUD_AUTH_PLUGIN=True
  #         gcloud container clusters get-credentials devsu-cluster-test --zone europe-west1-b --project devsu-project
  #         kubectl delete -f manifest-cloudbuild.yaml
  #         kubectl apply -f manifest-cloudbuild.yaml